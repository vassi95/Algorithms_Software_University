import java.util.Stack;

public class TowerOfHanoi {
static int stepsTaken = 0;
private static Stack<Integer> source;
private static Stack<Integer> destination = new Stack<Integer>();
private static Stack<Integer> spare = new Stack<Integer>();
	private static void MoveDisks(int bottomDisk, Stack<Integer> source, Stack<Integer> destination, Stack<Integer> spare){
		if(bottomDisk == 1){
			stepsTaken++;
			destination.push(source.pop());
			System.out.println("Step: "+ stepsTaken + "Moved disk: "+ bottomDisk);
			PrintRods();
		}
		else{
			MoveDisks(bottomDisk - 1, source, destination, spare);
		     
			destination.push(source.pop());
			 
		      MoveDisks(bottomDisk - 1, spare, source, destination);
		}
	}
	
	private static void PrintRods() {
		System.out.println("Source ");
		System.out.println("Destination ");
		System.out.println("Spare ");
		System.out.println();
		
	}

	public static void main(String[] args) {
		int numberOfDisks = 3;
		source = new Stack<Integer>();
		source.push(3);
		source.push(2);
		source.push(1);
		MoveDisks(numberOfDisks, source, destination,spare);

	}

}
