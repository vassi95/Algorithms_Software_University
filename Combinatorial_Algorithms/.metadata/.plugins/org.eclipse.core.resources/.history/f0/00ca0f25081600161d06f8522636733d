import java.util.Arrays;

public class Permutations {

	
	private static int countOfPermutations =0;
	
	private static void permute(int[] arr, int k){
		int startIndex = 0;
		if (startIndex>=arr.length){
			print(arr);
			setCountOfPermutations(getCountOfPermutations() + 1);
			System.out.println();
		}
		else{
			permute(arr, startIndex+1);
			for(int i=startIndex+1;i<arr.length;i++){
				swap(arr[startIndex], arr[i]);
				permute(arr, startIndex+1);
				swap(arr[startIndex], arr[i]);
			}
		}
		
	
	}
	
	private static void swap(int a, int b){
		if(a==b){
			return;
		}
		a^=b;
		b^=a;
		a^=b;
	}
	
	private static void print(int[] arr){
		for(int i=0;i<arr.length;i++){
			System.out.print(arr[i]);
		}
	}

	public static void main(String args[]){
		int n =3;
		int[] arr= {1,2,3};
		
		
		permute(arr,0);
		System.out.println("Total permutations: " + getCountOfPermutations());
	
	}

	public static int getCountOfPermutations() {
		return countOfPermutations;
	}

}
